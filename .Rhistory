geom_bar(stat = 'identity',
position = 'dodge')
colnames(site1012)
ggplot(site1012, aes(as.factor(plot), paiha, fill = treatment)) +
geom_bar(stat = 'identity',
position = 'dodge')
ggplot(site1012, aes(as.factor(plot), paiha, fill = as.factor(treatment))) +
geom_bar(stat = 'identity',
position = 'dodge')
ggplot(site1012, aes(as.factor(plot), paiha, fill = as.factor(treatment))) +
geom_bar(stat = 'identity',
position = 'dodge')+
labs(title = 'Periodic Annual Increment',
x = 'plots',
y ='m3/ha/yr ',
fill = 'treatments')+
ggplot(site1012, aes(as.factor(plot), paiha, fill = as.factor(treatment))) +
geom_bar(stat = 'identity',
position = 'dodge')+
labs(title = 'Periodic Annual Increment',
x = 'plots',
y ='m3/ha/yr ',
fill = 'treatments')
ggplot(site1012, aes(as.factor(plot), paiha, fill = as.factor(treatment))) +
geom_bar(stat = 'identity',
position = 'dodge')+
labs(title = 'Periodic Annual Increment',
x = 'plots',
y ='m3/ ha /yr ',
fill = 'Treatments') +
theme(plot.title = element_text(face = 'bold'),
axis.title.x = element_text(face = 'bold'),
axis.title.y = element_text(face = 'bold'))
plotvol <- summaryBy(voldm3.1980 +
voldm3.1987 +
pai~plot,
data = tvol1012, FUN = sum)
a_incrment <- summaryBy(ai~plot, data = tvol1012, FUN = sum)
paiviz <- ggplot(site1012, aes(as.factor(plot), paiha, fill = as.factor(treatment))) +
geom_bar(stat = 'identity',
position = 'dodge')+
labs(title = 'Periodic Annual Increment',
x = 'plots',
y ='m3/ ha /yr ',
fill = 'Treatments') +
theme(plot.title = element_text(face = 'bold'),
axis.title.x = element_text(face = 'bold'),
axis.title.y = element_text(face = 'bold'))
library(doBy)
library(dplyr)
library(lattice)
library(ggplot2)
library(car)
library(data.table)
library(TukeyC)
library('plotly')
paiviz <- ggplot(site1012, aes(as.factor(plot), paiha, fill = as.factor(treatment))) +
geom_bar(stat = 'identity',
position = 'dodge')+
labs(title = 'Periodic Annual Increment',
x = 'plots',
y ='m3/ ha /yr ',
fill = 'Treatments') +
theme(plot.title = element_text(face = 'bold'),
axis.title.x = element_text(face = 'bold'),
axis.title.y = element_text(face = 'bold'))
ggplotly(paiviz)
#Visualizing the density per hectare
dens <- barplot(site1012$densha, col = c(3,5,8,6),
names.arg = c(as.character(site1012$plot)),
main= "Density per Hectare",
sub = "4 treatments (2.5,2,1.5,1)",
ylim = c(0, 4000),
xlab = substitute(paste(bold("plots"))),
ylab = substitute(paste(bold("Stand Density"))),
)
legend("topleft",
legend = c(2.5,2.0,1.5,1.0),
pch = 16,
col = c(3,5,8,6))
text (x = dens, y = site1012$dens_ha, label = site1012$dens_ha, pos = 3, cex = 0.7, col = 'Red')
#Visualizing the density per hectare
dens <- barplot(site1012$densha, col = c(3,5,8,6),
names.arg = c(as.character(site1012$plot)),
main= "Density per Hectare",
sub = "4 treatments (2.5,2,1.5,1)",
ylim = c(0, 4000),
xlab = substitute(paste(bold("plots"))),
ylab = substitute(paste(bold("Stand Density"))),
)
legend("topleft",
legend = c(2.5,2.0,1.5,1.0),
pch = 16,
col = c(3,5,8,6))
text (x = dens, y = site1012$dens_ha, label = site1012$dens_ha, pos = 3, cex = 0.7, col = 'Red')
ggplotly(dens)
site1012$volm80ha <- site1012$voldm3.1980.sum/(site1012$areaha *1000)
site1012$volm87ha <- site1012$voldm3.1987.sum/(site1012$areaha*1000)
site1012$paiha <- round(site1012$pai.sum/(site1012$areaha*1000), 2)
site1012$ai <- round(site1012$ai.sum/(site1012$areaha*1000), 2)
head(site1012)
site1012 <- merge(site1012, plotvol, all = T)
site1012 <- merge(site1012, a_incrment, all = T)
tvol1012 <- read.table('https://raw.githubusercontent.com/xrander/SLU-Plantation-Experimentation/master/Data/Lab3/tvol1012.txt', header = T, sep = '\t', na.strings = 'NA', dec = '.', strip.white = T)
head(tvol1012)
site1012 <- read.table('https://raw.githubusercontent.com/xrander/Slu_experiment/master/Data/Lab3/site1012export.txt',
header = T,
na.strings = 'NA',
strip.white = T,
dec = '.',
sep = '\t')
head(site1012)
tvol1012$pai <- (tvol1012$voldm3.1987 - tvol1012$voldm3.1980)/7  # we divide by 7 because that's the difference between 1987 and 1980
#we can estimate the annual increment
tvol1012$ai <- tvol1012$pai/7 #since this is 7 years interval and don't have the value for the immediate previous year, we estimate the average annual increment within that period.
head(tvol1012)
plotvol <- summaryBy(voldm3.1980 +
voldm3.1987 +
pai~plot,
data = tvol1012, FUN = sum)
a_incrment <- summaryBy(ai~plot, data = tvol1012, FUN = sum)
site1012 <- merge(site1012, plotvol, all = T)
site1012 <- merge(site1012, a_incrment, all = T)
site1012$volm80ha <- site1012$voldm3.1980.sum/(site1012$areaha *1000)
site1012$volm87ha <- site1012$voldm3.1987.sum/(site1012$areaha*1000)
site1012$paiha <- round(site1012$pai.sum/(site1012$areaha*1000), 2)
site1012$ai <- round(site1012$ai.sum/(site1012$areaha*1000), 2)
head(site1012)
paiviz <- ggplot(site1012, aes(as.factor(plot), paiha, fill = as.factor(treatment))) +
geom_bar(stat = 'identity',
position = 'dodge')+
labs(title = 'Periodic Annual Increment',
x = 'plots',
y ='m3/ ha /yr ',
fill = 'Treatments') +
theme(plot.title = element_text(face = 'bold'),
axis.title.x = element_text(face = 'bold'),
axis.title.y = element_text(face = 'bold'))
ggplotly(paiviz)
#Visualizing the density per hectare
dens <- barplot(site1012$densha, col = c(3,5,8,6),
names.arg = c(as.character(site1012$plot)),
main= "Density per Hectare",
sub = "4 treatments (2.5,2,1.5,1)",
ylim = c(0, 4000),
xlab = substitute(paste(bold("plots"))),
ylab = substitute(paste(bold("Stand Density"))),
)
legend("topleft",
legend = c(2.5,2.0,1.5,1.0),
pch = 16,
col = c(3,5,8,6))
text (x = dens, y = site1012$dens_ha, label = site1012$dens_ha, pos = 3, cex = 0.7, col = 'Red')
ggplot(site1012, aes(as.factor(plots), densha, fill = as.factor(treatment)))+
geom_bar(stat = 'identity')
ggplot(site1012, aes(as.factor(plot), densha, fill = as.factor(treatment)))+
geom_bar(stat = 'identity')
paiviz <- ggplot(site1012, aes(as.factor(plot), paiha, fill = as.factor(treatment))) +
geom_bar(stat = 'identity',
position = 'dodge')+
labs(title = 'Periodic Annual Increment',
x = 'plots',
y ='m3/ ha /yr ',
fill = 'Spacing treatments') +
theme(plot.title = element_text(face = 'bold'),
axis.title.x = element_text(face = 'bold'),
axis.title.y = element_text(face = 'bold'))
ggplotly(paiviz)
paiviz <- ggplot(site1012, aes(as.factor(plot), paiha, fill = as.factor(treatment))) +
geom_bar(stat = 'identity')+
labs(title = 'Periodic Annual Increment',
x = 'plots',
y ='m3/ ha /yr ',
fill = 'Spacing treatments') +
theme(plot.title = element_text(face = 'bold'),
axis.title.x = element_text(face = 'bold'),
axis.title.y = element_text(face = 'bold'))
ggplotly(paiviz)
dens <- ggplot(site1012, aes(as.factor(plot), densha, fill = as.factor(treatment)))+
geom_bar(stat = 'identity')+
labs(title = 'Density Per Hectare',
x = 'plots',
y = 'stand density',
fill = 'Space treatment') +
theme(plot.title = element_text(face = 'bold'),
axis.title.x = element_text(face = 'bold'),
axis.title.y = element_text(face = 'bold'))
dens <- ggplot(site1012, aes(as.factor(plot), densha, fill = as.factor(treatment)))+
geom_bar(stat = 'identity')+
labs(title = 'Density Per Hectare',
x = 'plots',
y = 'stand density',
fill = 'Space treatment') +
theme(plot.title = element_text(face = 'bold'),
axis.title.x = element_text(face = 'bold'),
axis.title.y = element_text(face = 'bold'))
ggplotly(dens)
##first we estimate the density after thinning which is provided in site1012
density <- summaryBy(densha~treatment,
data = site1012,
FUN = mean)
## dens_ha.mean is the density after thinning, so we rename to 'after_thinning'
names(density)[2] <- 'after_thinning'
##now we estimate the density before thinning
density$before_thinning <- 10000/(density$treatment^2)
##percentage change in the stand can be estimated now.
## percentage change = (old - new)/old *100
density$percent_removed <- (density$before_thinning-
density$after_thinning)/density$before_thinning * 100
head(density)
barplot(tapply(site1012$densha,
site1012$treatment,
FUN = mean),
xlab = substitute(paste(bold('treatment(spacing)'))),
ylab = substitute(paste(bold(('stem density')))),
main = 'Treatment Effect on Stem Density',
col = c(5:9))
barplot(tapply (site1012$qmd,
site1012$treatment,
FUN = mean),
xlab = substitute(paste(bold('treatment(spacing)'))),
ylim = c(0, 20),
ylab = substitute(paste(bold('mean diameter(qmd)'))),
main = 'treatment effect on QMD',
col = c(10:13))
barplot(tapply(site1012$paiha,
site1012$treatment,
FUN = mean),
xlab = substitute(paste(bold("Initial Spacing Treatment"))),
ylab = substitute(paste(bold("PAI, m3/ha & year"))),
col = c(2,13,15,20),
ylim = c(0, 20),
main = "Effect of Spacing on PAI")
expfert <- read.table('https://raw.githubusercontent.com/xrander/SLU-Plantation-Experimentation/master/Data/Lab6/expfert.txt',
header = T,
sep = '\t',
na.strings = 'NA',
dec = '.',
strip.white = T)
str(expfert)
summary(expfert)
ftable(expfert$block, expfert$treatment, expfert$revision)
xyplot(age~revision|block, data = expfert,
col = 1,
pch = 16,
type= c('p','l'), # to change the plot type, an alternative is using type = 'b'
strip = strip.custom(bg = 'red'))
ggplot (expfert, aes(revision, age))+
geom_point()
ggplot (expfert, aes(revision, age))+
geom_point()+
geom_line()
ggplot (expfert, aes(revision, age))+
geom_point()+
geom_line()+
facet_grid(~block, nrow = 2)
ggplot (expfert, aes(revision, age))+
geom_point()+
geom_line()+
facet_grid(~block, nrow = 2)
ggplot (expfert, aes(revision, age))+
geom_point()+
geom_line()+
facet_grid(~block, ncol = 2)
ggplot (expfert, aes(revision, age))+
geom_point()+
geom_line()+
facet_wrap(~block, ncol = 2)
ggplot (expfert, aes(revision, age))+
geom_smooth()+
geom_line()+
facet_wrap(~block, ncol = 2)
ggplot (expfert, aes(revision, age))+
geom_point()+
geom_line()+
facet_wrap(~block, ncol = 2)
ggplot (expfert, aes(revision, age))+
geom_point()+
geom_line()+
facet_wrap(~block, ncol = 3)+
ggplot (expfert, aes(revision, age))+
geom_point()+
geom_line()+
facet_wrap(~block, ncol = 3)
xyplot(CAI~factor(revision)|block,
groups=treatment,data=expfert,
par.settings=simpleTheme(col=c(1,2,3,4),pch=c(16,1,2,3)), #adding settings for symbology
auto.key=list(corner = c(0.02, 0.94),border="black",cex=0.5,points=T))
ggplot (expfert, aes(revision, age, color = factor(block)))+
geom_point()+
geom_line()+
facet_wrap(~block, ncol = 3)+
labs(title = '')+
theme(plot.title = element_text(face = 'bold'))
colnames(expfert)
ggplot (expfert, aes(revision, age, color = factor(treatment)))+
geom_point()+
geom_line()+
facet_wrap(~block, ncol = 3)+
labs(title = '')+
theme(plot.title = element_text(face = 'bold'))
ggplot (expfert, aes(revision, age, color = factor(block)))+
geom_point()+
geom_line()+
facet_wrap(~block, ncol = 3)+
labs(title = '')+
theme(plot.title = element_text(face = 'bold'))
ggplot (expfert, aes(revision, age, color = factor(block)))+
geom_point()+
geom_line()+
facet_wrap(~block, ncol = 3)+
labs(title = 'Experiment revisions across Blocks')+
theme(plot.title = element_text(face = 'bold'),
axis.title.x = 'revision',
axis.title.y = 'age')
ggplot (expfert, aes(revision, age, color = factor(block)))+
geom_point()+
geom_line()+
facet_wrap(~block, ncol = 3)+
labs(title = 'Experiment revisions across Blocks')+
theme(plot.title = element_text(face = 'bold'),
axis.title.x = element_text(face = 'revision'),
axis.title.y = element_text(face ='age'))
ggplot (expfert, aes(revision, age, color = factor(block)))+
geom_point()+
geom_line()+
facet_wrap(~block, ncol = 3)+
labs(title = 'Experiment revisions across Blocks')
ggplot (expfert, aes(revision, age, color = factor(block)))+
geom_point()+
geom_line()+
facet_wrap(~block, ncol = 3)+
labs(title = 'Experiment revisions across Blocks',
x = 'revision',
y = 'age')+
theme(plot.title = element_text(face = 'bold'),
axis.title.x = element_text(face = 'revision'),
axis.title.y = element_text(face ='age'))
ggplot (expfert, aes(revision, age, color = factor(block)))+
geom_point()+
geom_line()+
facet_wrap(~block, ncol = 3)+
labs(title = 'Experiment revisions across Blocks',
x = 'revision',
y = 'age')
ggplot (expfert, aes(revision, age, color = block))+
geom_point()+
geom_line()+
facet_wrap(~block, ncol = 3)+
labs(title = 'Experiment revisions across Blocks',
x = 'revision',
y = 'age')
ggplot (expfert, aes(revision, age, color = factor(block)))+
geom_point()+
geom_line()+
facet_wrap(~block, ncol = 3)+
labs(title = 'Experiment revisions across Blocks',
x = 'revision',
y = 'age')
ggplot (expfert, aes(revision, age, color = factor(block)))+
geom_point()+
geom_line()+
facet_wrap(~block, ncol = 3)+
labs(title = 'Experiment revisions across Blocks',
x = 'revision',
y = 'age') +
theme (plot.title = element_text(face = 'bold'),
axis.title.x = element_text(face = 'revision'),
axis.title.y = element_text(face ='age'))
ggplot (expfert, aes(revision, age, color = factor(block)))+
geom_point()+
geom_line()+
facet_wrap(~block, ncol = 3)+
labs(title = 'Experiment revisions across Blocks',
x = 'revision',
y = 'age')
ggplot (expfert, aes(revision, age, color = factor(block)))+
geom_point()+
geom_line()+
facet_wrap(~block, ncol = 3)+
labs(title = 'Experiment revisions across Blocks',
x = 'revision',
y = 'age',
fill = 'blocks')
ggplot (expfert, aes(revision, age, color = factor(block)))+
geom_point()+
geom_line()+
facet_wrap(~block, ncol = 3)+
labs(title = 'Experiment revisions across Blocks',
x = 'revision',
y = 'age',
color = 'blocks')
barchart(volume~treatment|block, data = expfert,
subset = revision == 1,
main = 'Revision 1',
ylab = substitute(paste(bold('Volume'))),
xlab = substitute(paste(bold('Treatment'))))
plot (pop2$dia, pop2$height,
xlab = 'diameter(mm)',
ylab = 'height (mm)',
main = 'Height vs Diameter',
col = pop$fert)
bwplot(dia~block, data = pop2,
xlab = 'block',
ylab = 'diameter (cm)',
main = 'Diameter distribution across Blocks') #bwplot is the lattice package boxplot function
ggplot(pop2, aes(clone, dia, col = fert_name))+
geom_boxplot()+
labs(x = 'clone',
y = 'diameter')+
facet_wrap(~fert_name)+
labs(title = 'Diameter performance')
diapor <- ggplot(pop2, aes(clone, dia, col = fert_name))+
geom_boxplot()+
labs(x = 'clone',
y = 'diameter')+
facet_wrap(~fert_name)+
labs(title = 'Diameter performance')
diapor <- ggplot(pop2, aes(clone, dia, col = fert_name))+
geom_boxplot()+
labs(x = 'clone',
y = 'diameter')+
facet_wrap(~fert_name)+
labs(title = 'Diameter performance')
ggplotly(diapor)
hist(pop2$dia,
col = 'red',
main = 'Histogram of diameter',
xlab = 'diameter')
diahist<- ggplot(pop2, aes(dia, col = 'red')) +
geom_histogram()+
labs(title = 'Histogram of diameter',
xlab = 'diameter')
ggplotly(diahist)
diahist<- ggplot(pop2, aes(dia, col = 'red')) +
geom_histogram(binwidth = 40)+
labs(title = 'Histogram of diameter',
xlab = 'diameter')
ggplotly(diahist)
diahist<- ggplot(pop2, aes(dia, col = 'red')) +
geom_histogram(binwidth = 5)+
labs(title = 'Histogram of diameter',
xlab = 'diameter')
ggplotly(diahist)
diahist<- ggplot(pop2, aes(dia, col = 'red')) +
geom_histogram(binwidth = 20)+
labs(title = 'Histogram of diameter',
xlab = 'diameter')
ggplotly(diahist)
diahist<- ggplot(pop2, aes(dia, col = 'red')) +
geom_histogram(binwidth = 0.5)+
labs(title = 'Histogram of diameter',
xlab = 'diameter')
ggplotly(diahist)
diahist<- ggplot(pop2, aes(dia, col = 'red')) +
geom_histogram(binwidth = 0.1)+
labs(title = 'Histogram of diameter',
xlab = 'diameter')
ggplotly(diahist)
diahist<- ggplot(pop2, aes(dia, col = 'red')) +
geom_histogram(binwidth = 1)+
labs(title = 'Histogram of diameter',
xlab = 'diameter')
ggplotly(diahist)
diahist<- ggplot(pop2, aes(dia, fill = 'red')) +
geom_histogram(binwidth = 0.75,
show.legend = F)+
labs(title = 'Histogram of diameter',
xlab = 'diameter')
ggplotly(diahist)
diahist<- ggplot(pop2, aes(dia, fill = 'red', col = 'black')) +
geom_histogram(binwidth = 0.75,
show.legend = F)+
labs(title = 'Histogram of diameter',
xlab = 'diameter')
ggplotly(diahist)
diahist<- ggplot(pop2, aes(dia, fill = 'red', col = 'black')) +
geom_histogram(binwidth = 0.55,
show.legend = F)+
labs(title = 'Histogram of diameter',
xlab = 'diameter')
ggplotly(diahist)
diahist<- ggplot(pop2, aes(dia, fill = 'red', col = 'black')) +
geom_histogram(binwidth = 0.6,
show.legend = F)+
labs(title = 'Histogram of diameter',
xlab = 'diameter')
ggplotly(diahist)
diahist<- ggplot(pop2, aes(dia)) +
geom_histogram(binwidth = 0.6,
show.legend = F)+
labs(title = 'Histogram of diameter',
xlab = 'diameter')
ggplotly(diahist)
diahist<- ggplot(pop2, aes(dia)) +
geom_histogram(binwidth = 0.55,
show.legend = F)+
labs(title = 'Histogram of diameter',
xlab = 'diameter')
ggplotly(diahist)
diahist<- ggplot(pop2, aes(dia)) +
geom_histogram(binwidth = 0.5,
show.legend = F)+
labs(title = 'Histogram of diameter',
xlab = 'diameter')
ggplotly(diahist)
diahist<- ggplot(pop2, aes(dia)) +
geom_histogram(binwidth = 0.45,
show.legend = F)+
labs(title = 'Histogram of diameter',
xlab = 'diameter')
ggplotly(diahist)
